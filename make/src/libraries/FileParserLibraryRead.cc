#include "common.h"
#include "FileParserLibraryRead.h"

#include "Libraries.h"
#include "LibraryNode.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    FileParserLibraryRead
// @method:   constructor
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FileParserLibraryRead::FileParserLibraryRead (Libraries & libraries, Library & library)
: FileParserLibrary (libraries, library)
{
  parseFile ();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    FileParserLibraryRead
// @method:   destructor
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FileParserLibraryRead::~FileParserLibraryRead ()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    FileParserLibraryRead
// @method:   registerLibrary
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
FileParserLibraryRead::registerLibrary (const String & library_name)
{
  String new_path (getPath ());
  new_path << library_name << "/";
  VERIFY_INPUT_VALID (new_path.stringLen () < 256, "Path tree is too extensive.\n");

  Library * new_library = new LibraryNode (getLibrary (), new_path);

  Libraries & libraries = getLibraries ();
  libraries.registerLibrary (library_name, new_library);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    FileParserLibraryRead
// @method:   registerLibraryParam
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
FileParserLibraryRead::registerLibraryParam (const String & param_name, const String & param_val)
{
  Library & library = getLibrary ();
  library.addLibraryParam (param_name, param_val);
}


