#include "common.h"
#include "ModuleParamRule.h"

#include "ActiveObject.h"
#include "Module.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    ModuleParamRule
// @method:   constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
ModuleParamRule::ModuleParamRule (const String & param_name, const String & variable_name) :
  m_param_name (param_name),
  m_variable_name (variable_name)
{
  VERIFY_INPUT_VALID (m_param_name[0] != '_', "Param name can not begin with a '_' character.\n");
  VERIFY_INPUT_VALID (m_variable_name[0] == '_', "Variable must begin with a '_' character.\n");
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    ModuleParamRule
// @method:   registerModuleParam
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
ModuleParamRule::registerModuleParam (const ActiveObject & active_object, Module & module_group) const
{
  const String & param_value = active_object.getVariableValue (m_variable_name);
  module_group.appendModuleParam (m_param_name.cStr (), param_value);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    ModuleParamRule
// @method:   objectType
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
TypeObject
ModuleParamRule::objectType () const
{
  return OBJECT_MODULE_PARAM_RULE;
}

