#include "Common.h"
#include "UsbDeviceSingleHidKeyboard.h"

#include "TextSingleLine.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    UsbDeviceSingleHidKeyboard
// @method:   constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
UsbDeviceSingleHidKeyboard::UsbDeviceSingleHidKeyboard  () :
  UsbDeviceSingleHid ()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    UsbDeviceSingleHidKeyboard
// @method:   getDeviceClass
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
TypeUsbDeviceClass
UsbDeviceSingleHidKeyboard::getDeviceClass () const
{
  return USB_DEVICE_CLASS_HID_KEYBOARD;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    UsbDeviceSingleHidKeyboard
// @method:   getBootReportSize
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
uint8_t
UsbDeviceSingleHidKeyboard::getBootReportSize () const
{
  return 8;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    UsbDeviceSingleHidKeyboard
// @method:   registerInitialState
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
UsbDeviceSingleHidKeyboard::registerInitialState (const uint8_t * initial_state)
{
  TextSingleLine keyboard_report;
  keyboard_report << "Keyboard action (" << TEXT_STYLE_HEX2;
  for (int index = 0; index < 8; index++)
  {
    keyboard_report << " 0x" << initial_state[index];
  }
  keyboard_report << ").";
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    UsbDeviceSingleHidKeyboard
// @method:   registerState
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
UsbDeviceSingleHidKeyboard::registerState (const uint8_t * new_state)
{
  TextSingleLine keyboard_report;
  keyboard_report << "Keyboard action (" << TEXT_STYLE_HEX2;
  for (int index = 0; index < 8; index++)
  {
    keyboard_report << " 0x" << new_state[index];
  }
  keyboard_report << ").";
}

