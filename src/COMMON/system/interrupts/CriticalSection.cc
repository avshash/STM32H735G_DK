#include "Common.h"
#include "CriticalSection.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    CriticalSection
// @method:   constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CriticalSection::CriticalSection () :
  m_enabling (false),
  m_prev_active (NULL)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    CriticalSection
// @method:   handleInterrupt
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
CriticalSection::handleInterrupt ()
{
  if (m_enabling)
  {
    // We are in the process of removing the interrupts protection.
    // Can be invoked only by an active interrupt.
    // (This happends when enabling interrupts is not implemented as an atomic action).
    enableInterrupts ();
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    CriticalSection
// @method:   setPrevActive
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
CriticalSection::setPrevActive (CriticalSection * perv_active)
{
  ASSERT_TEST (m_prev_active == NULL);
  m_prev_active = perv_active;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    CriticalSection
// @method:   getPrevActive
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CriticalSection *
CriticalSection::getPrevActive ()
{
  return m_prev_active;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @class:    CriticalSection
// @method:   setEnabling
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
CriticalSection::setEnabling ()
{
  m_enabling = true;
}


