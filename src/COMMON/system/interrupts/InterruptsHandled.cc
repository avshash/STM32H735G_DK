#include "Common.h"

#include "ModuleManagerInterrupts.h"

namespace
{
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @function: handleInterrupt
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
handleInterrupt (TypeInterruptHandler family, TypeInterruptAction action)
{
  ModuleManagerInterrupts & interrupts_manager = ModuleManager::getInterrupts ();
  interrupts_manager.handleInterrupt (family, action);
}
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @function: handledUsbInterruptOut
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
extern "C" void handledUsbInterruptOut ()
{
  handleInterrupt (INTERRUPT_HANDLER_USB, INTERRUPT_ACTION_USB_OUT);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @function: handledUsbInterruptIn
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
extern "C" void handledUsbInterruptIn ()
{
  handleInterrupt (INTERRUPT_HANDLER_USB, INTERRUPT_ACTION_USB_IN);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @function: handledUsbInterrupt
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
extern "C" void handledUsbInterruptWakeup ()
{
  handleInterrupt (INTERRUPT_HANDLER_USB, INTERRUPT_ACTION_USB_WAKEUP);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @function: handledUsbInterruptGeneral
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
extern "C" void handledUsbInterruptGeneral ()
{
  handleInterrupt (INTERRUPT_HANDLER_USB, INTERRUPT_ACTION_USB_GENERAL);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// @function: handledI2c4
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
extern "C" void handledI2c4 ()
{
  handleInterrupt (INTERRUPT_HANDLER_I2C4, INTERRUPT_ACTION_BASIC);
}


